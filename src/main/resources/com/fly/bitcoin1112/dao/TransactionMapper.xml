<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fly.bitcoin1112.dao.TransactionMapper">
  <resultMap id="BaseResultMap" type="com.fly.bitcoin1112.po.Transaction">
    <id column="transaction_id" jdbcType="INTEGER" property="transactionId" />
    <result column="txid" jdbcType="CHAR" property="txid" />
    <result column="txhash" jdbcType="CHAR" property="txhash" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="total_input" jdbcType="DOUBLE" property="totalInput" />
    <result column="total_output" jdbcType="DOUBLE" property="totalOutput" />
    <result column="fees" jdbcType="DOUBLE" property="fees" />
    <result column="block_id" jdbcType="INTEGER" property="blockId" />
  </resultMap>
  <sql id="Base_Column_List">
    transaction_id, txid, txhash, time, weight, status, size, total_input, total_output, 
    fees, block_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction1
    where transaction_id = #{transactionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transaction1
    where transaction_id = #{transactionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fly.bitcoin1112.po.Transaction" useGeneratedKeys="true" keyProperty="transactionId">
    insert into transaction1 (transaction_id, txid, txhash, 
      time, weight, status, size, 
      total_input, total_output, fees, 
      block_id)
    values (#{transactionId,jdbcType=INTEGER}, #{txid,jdbcType=CHAR}, #{txhash,jdbcType=CHAR}, 
      #{time,jdbcType=BIGINT}, #{weight,jdbcType=INTEGER}, #{status,jdbcType=BIT}, #{size,jdbcType=BIGINT}, 
      #{totalInput,jdbcType=DOUBLE}, #{totalOutput,jdbcType=DOUBLE}, #{fees,jdbcType=DOUBLE}, 
      #{blockId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fly.bitcoin1112.po.Transaction">
    insert into transaction1
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="txid != null">
        txid,
      </if>
      <if test="txhash != null">
        txhash,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="totalInput != null">
        total_input,
      </if>
      <if test="totalOutput != null">
        total_output,
      </if>
      <if test="fees != null">
        fees,
      </if>
      <if test="blockId != null">
        block_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionId != null">
        #{transactionId,jdbcType=INTEGER},
      </if>
      <if test="txid != null">
        #{txid,jdbcType=CHAR},
      </if>
      <if test="txhash != null">
        #{txhash,jdbcType=CHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="size != null">
        #{size,jdbcType=BIGINT},
      </if>
      <if test="totalInput != null">
        #{totalInput,jdbcType=DOUBLE},
      </if>
      <if test="totalOutput != null">
        #{totalOutput,jdbcType=DOUBLE},
      </if>
      <if test="fees != null">
        #{fees,jdbcType=DOUBLE},
      </if>
      <if test="blockId != null">
        #{blockId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fly.bitcoin1112.po.Transaction">
    update transaction1
    <set>
      <if test="txid != null">
        txid = #{txid,jdbcType=CHAR},
      </if>
      <if test="txhash != null">
        txhash = #{txhash,jdbcType=CHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=BIGINT},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=BIGINT},
      </if>
      <if test="totalInput != null">
        total_input = #{totalInput,jdbcType=DOUBLE},
      </if>
      <if test="totalOutput != null">
        total_output = #{totalOutput,jdbcType=DOUBLE},
      </if>
      <if test="fees != null">
        fees = #{fees,jdbcType=DOUBLE},
      </if>
      <if test="blockId != null">
        block_id = #{blockId,jdbcType=INTEGER},
      </if>
    </set>
    where transaction_id = #{transactionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fly.bitcoin1112.po.Transaction">
    update transaction1
    set txid = #{txid,jdbcType=CHAR},
      txhash = #{txhash,jdbcType=CHAR},
      time = #{time,jdbcType=BIGINT},
      weight = #{weight,jdbcType=INTEGER},
      status = #{status,jdbcType=BIT},
      size = #{size,jdbcType=BIGINT},
      total_input = #{totalInput,jdbcType=DOUBLE},
      total_output = #{totalOutput,jdbcType=DOUBLE},
      fees = #{fees,jdbcType=DOUBLE},
      block_id = #{blockId,jdbcType=INTEGER}
    where transaction_id = #{transactionId,jdbcType=INTEGER}
  </update>
  <!--  custom-->
  <select id="search" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction1
    <where>
      <if test="transactionId != null">
        transaction_id = #{transactionId}
      </if>
      <if test="txid != null">
        txid = #{txid}
      </if>
      <if test="txhash != null">
        AND txhash = #{txhash}
      </if>
    </where>
  </select>
  <!--  custom-->
  <select id="selectByBlockId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction1
    where block_id = #{blockId}
  </select>
  <select id="selectByBlockIdWithPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction1
    where block_id = #{blockId}
  </select>
  <select id="selectByTxid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction1
    where txid = #{txid}
  </select>
  <select id="selectTransactionByAddress" resultMap="BaseResultMap">
    SELECT distinct(td.transaction_id) as transaction_id2 ,t.* FROM record1 as td left join transaction1 as t on td.transaction_id = t.transaction_id
    where td.address = #{address}
    order by time desc
  </select>
</mapper>